What happens when you initialize a repository? Why do you need to do it?

The .git folder is created.
Else git wouldn't know where is the root folder of the repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The working directory is a physical folder holding files.
The stating area is a list of files from that directory. It is only a list and this list does not necessary references all the files of the working directory;
The repository holds the history of commits, the succession of snapshots of the staging area.

How can you use the staging area to make sure you have one commit per logical change?
Before doing the commit you can make sure that all the modifications of the files in the staging are targeting the same objective = logical change (ie add a feature, fix a bug, etc..).

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Whenever I need to manage concurrently for some time, two or more versions with a different functional scope. For instance I have a version going for production (on which I will only fix critical bugs) and another one on which I continue adding  features. 
Branches help because it allows to make fixes or add features to a branch, without being disturbed by the changes made on the other branch.

How do the diagrams help you visualize the branch structure?
The diagram makes apparent the different branches and where they split or merge.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
Pros:
automatic merge handles all the simple cases (independant changes) that can be solved easily and then saves time compared to manually merging.
Automatic merging allows you to concentrate on the conflicts resolution, that require attention. 
Mergin manually can easily led to errors if you do not pay close attention. It is safer to let git manage automatically.
Automatic merging lets you know about conflicts, that otherwise you may not be aware of.
Cons:
Does not handle the merge when there are conflicts.